{"version":3,"sources":["api/api.js","components/ListaCategorias.jsx","components/ListaPost.jsx","paginas/Home.jsx","paginas/Sobre.jsx","assets/img/doguito404.svg","paginas/Pagina404.jsx","components/Cabecalho.jsx","paginas/Post.jsx","paginas/SubCategoria.jsx","paginas/Categoria.jsx","paginas/listaFilmes.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","busca","url","setDado","a","get","reposta","data","ListaCategorias","useState","categorias","setCategorias","useEffect","className","map","categoria","to","category","title","ListaPost","posts","setPosts","post","description","Home","Sobre","Pagina404","src","imagem","alt","Cabecalho","Post","useHistory","id","useParams","setPost","setData","fetchData","res","console","log","filter","rating","SubCategoria","subcategoria","Categoria","useRouteMatch","path","subcategorias","setSubCategorias","exact","ListaFilmes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iYAGaA,EAAMC,IAAMC,OAAO,CAC9BC,QAAS,0CAGEC,EAAK,uCAAG,WAAMC,EAAKC,GAAX,eAAAC,EAAA,sEACGP,EAAIQ,IAAIH,GADX,OACbI,EADa,OAEnBH,EAAQG,EAAQC,MAFG,2CAAH,wDCqBHC,G,MAvBS,WAAO,IAAD,EAEOC,mBAAS,IAFhB,mBAEtBC,EAFsB,KAEVC,EAFU,KAQ5B,OAJAC,qBAAU,WACTX,EAAM,aAAcU,KAClB,IAGD,oBAAIE,UAAU,kCAAd,SAEIH,EAAWI,KAAI,SAACC,GAAD,OACb,cAAC,IAAD,CAAMC,GAAE,0BAAqBD,EAAUE,UAAvC,SACE,oBAAIJ,UAAS,mEAA8DE,EAAUG,OAArF,SACGH,EAAUE,oBCWVE,EA1BG,SAAC,GAAe,IAAZjB,EAAW,EAAXA,IAAW,EAEPO,mBAAS,IAFF,mBAE1BW,EAF0B,KAEnBC,EAFmB,KAQ/B,OAJFT,qBAAU,WACRX,EAAMC,EAAKmB,KACV,CAACnB,IAGA,yBAASW,UAAU,kBAAnB,SAEGO,EAAMN,KAAI,SAACQ,GAAD,OACR,cAAC,IAAD,CAAMT,UAAS,mCAA8BS,EAAKL,UAAYD,GAAE,iBAAYM,EAAKJ,OAAjF,SACE,oCACG,oBAAIL,UAAU,sBAAd,SACGS,EAAKJ,QAER,mBAAGL,UAAU,oBAAb,SAAkCS,EAAKC,gBAJ5BD,EAAKJ,eCAfM,EAdF,WAEX,OACE,iCACE,qBAAKX,UAAU,YAAf,SACE,oBAAIA,UAAU,gBAAd,kCAEF,cAAC,EAAD,IACA,cAAC,EAAD,CAAWX,IAAK,mBCiBPuB,G,MAvBD,WAEZ,OACE,iCACE,qBAAKZ,UAAU,YAAf,SACE,oBAAIA,UAAU,gBAAd,4BAEF,yBAASA,UAAU,8BAAnB,SACE,0BAASA,UAAU,SAAnB,4lBAEA,uBAFA,szBAIA,uBAJA,mgBAMA,uBANA,+aCbO,MAA0B,uCCe1Ba,G,MAXG,WAChB,OACE,uBAAMb,UAAU,2CAAhB,UACE,qBAAKA,UAAU,iBAAiBc,IAAKC,EAAQC,IAAI,6BACjD,mBAAGhB,UAAU,sBAAb,qDCuBSiB,G,MA3BG,WAChB,OACE,yBAAQjB,UAAU,sBAAlB,UACE,qBAAKA,UAAU,iBAAf,SACE,sBAAMA,UAAU,4BAGlB,qBAAKA,UAAU,sBAAf,SACE,cAAC,IAAD,CAAMG,GAAG,IAAIH,UAAU,oBAAvB,SACE,oBAAIA,UAAU,oBAAd,sBAIJ,qBAAKA,UAAU,iBAAf,SACE,qBAAIA,UAAU,aAAd,UACE,6BAAI,cAAC,IAAD,CAAMG,GAAG,IAAIH,UAAU,8BAAvB,oBACJ,6BAAI,cAAC,IAAD,CAAMG,GAAG,SAASH,UAAU,YAA5B,sBACJ,6BAAI,cAAC,IAAD,CAAMG,GAAG,SAASH,UAAU,YAA5B,0BAIR,qBAAKA,UAAU,mCC4BNkB,G,MA/CF,WACGC,cAAd,IACQC,EAAOC,cAAPD,GAFS,EAGMxB,mBAAS,IAHf,mBAGL0B,GAHK,aAIO1B,mBAAS,IAJhB,mBAIVF,EAJU,KAIJ6B,EAJI,KAMjBxB,qBAAU,WACRX,EAAM,UAAD,OAAWgC,GAAME,KACrB,CAACF,IAEJ,IAAMI,EAAS,uCAAG,4BAAAjC,EAAA,+EAEIN,IAAMO,IACtB,kDAHY,OAERiC,EAFQ,OAKdF,EAAO,OAACE,QAAD,IAACA,OAAD,EAACA,EAAK/B,MALC,gDAOdgC,QAAQC,IAAR,MAPc,yDAAH,qDAef,OAJA5B,qBAAU,WACRyB,MACC,IAGD,iCAEM,qBAAIxB,UAAU,gBAAd,sBAAwCoB,KACxC,yBAASpB,UAAU,8BAAnB,SAECN,EACCkC,QAAO,SAACnB,GAAD,OAAWA,EAAKJ,QAAUe,KACjCnB,KAAI,SAACQ,GAAD,OACD,0BAAuBT,UAAU,SAAjC,UACG,qBAAIA,UAAU,sBAAd,UACGS,EAAKJ,MADR,IACe,uBADf,IACyB,uBADzB,IACmC,0CAAaI,EAAKoB,aAErD,mBAAG7B,UAAU,oBAAb,SAAkCS,EAAKC,gBAJ5BD,EAAKW,cC7BnBU,EAPM,WAAO,IAClBC,EAAiBV,cAAjBU,aACR,OACE,cAAC,EAAD,CAAW1C,IAAG,8BAAyB0C,MCiF5BC,EA/EG,WAAO,IACfZ,EAAOC,cAAPD,GADc,EAEAa,cAAd5C,EAFc,EAEdA,IAAK6C,EAFS,EAETA,KAFS,EAGoBtC,mBAAS,IAH7B,mBAGfuC,EAHe,KAGAC,EAHA,OAKExC,mBAAS,IALX,mBAKfF,EALe,KAKT6B,EALS,KAOtBxB,qBAAU,WACRX,EAAM,kBAAD,OAAmBgC,IAAM,SAAClB,GAC7BkC,EAAiBlC,EAAUiC,oBAE5B,CAACf,IAEJ,IAAMI,EAAS,uCAAG,4BAAAjC,EAAA,+EAEIN,IAAMO,IACtB,kDAHY,OAERiC,EAFQ,OAKdF,EAAO,OAACE,QAAD,IAACA,OAAD,EAACA,EAAK/B,MALC,gDAOdgC,QAAQC,IAAR,MAPc,yDAAH,qDAef,OAJA5B,qBAAU,WACRyB,MACC,IAGD,qCACE,qBAAKxB,UAAU,YAAf,SACE,oBAAIA,UAAU,gBAAd,qCAEF,cAAC,EAAD,IACA,qBAAIA,UAAU,kCAAd,UAEImC,EAAclC,KAAI,SAAC8B,GAAD,OAChB,oBACE/B,UAAS,mEAA8DoB,GADzE,SAIE,cAAC,IAAD,CAAMjB,GAAE,UAAKd,EAAL,YAAY0C,GAApB,SACGA,KAHEA,MASX,iCAEE,qBAAI/B,UAAU,gBAAd,uBAAyCoB,KACzC,yBAASpB,UAAU,8BAAnB,SAECN,EACCkC,QAAO,SAACnB,GAAD,OAAWA,EAAKL,WAAagB,KACpCnB,KAAI,SAACQ,GAAD,OACD,0BAAuBT,UAAU,SAAjC,UACG,qBAAIA,UAAU,sBAAd,UACGS,EAAKJ,MADR,IACe,uBADf,IACyB,uBADzB,IACmC,0CAAaI,EAAKoB,aAErD,mBAAG7B,UAAU,oBAAb,SAAkCS,EAAKC,gBAJ5BD,EAAKW,eAY5B,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiB,OAAK,EAACH,KAAI,UAAKA,EAAL,KAAjB,SACE,cAAC,EAAD,CAAW7C,IAAG,8BAAyB+B,OAEzC,cAAC,IAAD,CAAOc,KAAI,UAAKA,EAAL,uBAAX,SACE,cAAC,EAAD,aCtCKI,EAvCK,WAAO,IAAD,EAEA1C,mBAAS,IAFT,mBAEjBF,EAFiB,KAEX6B,EAFW,KAIlBC,EAAS,uCAAG,4BAAAjC,EAAA,+EAEIN,IAAMO,IACtB,kDAHY,OAERiC,EAFQ,OAKdF,EAAO,OAACE,QAAD,IAACA,OAAD,EAACA,EAAK/B,MALC,gDAOdgC,QAAQC,IAAR,MAPc,yDAAH,qDAeX,OAJJ5B,qBAAU,WACRyB,MACC,IAGG,iCACE,qBAAKxB,UAAU,YAAf,SACA,oBAAIA,UAAU,gBAAd,8CAEF,yBAASA,UAAU,8BAAnB,SAEGN,EAAKO,KAAI,SAACQ,GAAD,OACL,0BAAuBT,UAAU,SAAjC,UACG,qBAAIA,UAAU,sBAAd,UACGS,EAAKJ,MADR,IACe,uBADf,IACyB,uBADzB,IACmC,0CAAaI,EAAKoB,aAErD,mBAAG7B,UAAU,oBAAb,SAAkCS,EAAKC,gBAJ5BD,EAAKW,aCQnBmB,MA7Bf,WAEE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOF,OAAK,EAACH,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,sBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,EAAD,aCrBKM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1Bb,M","file":"static/js/main.c971fda6.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n\r\nexport const api = axios.create({\r\n  baseURL: 'https://imdb-bonaparte.herokuapp.com/'\r\n})\r\n\r\nexport const busca = async(url, setDado) => { \r\n  const reposta = await api.get(url)\r\n  setDado(reposta.data)\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { busca } from '../api/api'\r\nimport '../assets/css/blog.css'\r\n\r\nconst ListaCategorias = () => { \r\n\r\n  const[categorias, setCategorias] = useState([])\r\n\r\n  useEffect(() => {\r\n   busca(`/movie/all`, setCategorias)\r\n  }, [])\r\n\r\n  return(\r\n    <ul className=\"lista-categorias container flex\">\r\n      {\r\n        categorias.map((categoria) => (\r\n          <Link to={`/movie/category/${categoria.category}`}>\r\n            <li className={`lista-categorias__categoria lista-categorias__categoria--${categoria.title}`}>\r\n              {categoria.category}\r\n            </li>\r\n          </Link>\r\n        ))\r\n      }\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ListaCategorias","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { busca } from '../api/api'\r\n\r\nconst ListaPost = ( { url } ) => { \r\n\r\nconst [posts, setPosts] = useState([])\r\n\r\nuseEffect(() => {\r\n  busca(url, setPosts)\r\n}, [url])\r\n\r\n  return(\r\n    <section className=\"posts container\">\r\n      { \r\n       posts.map((post)=> (\r\n         <Link className={`cartao-post cartao-post--${post.category}`} to={`/movie/${post.title}`}>\r\n           <article key={post.title}>\r\n              <h3 className=\"cartao-post__titulo\">\r\n                {post.title}\r\n              </h3>\r\n              <p className=\"cartao-post__meta\">{post.description}</p>\r\n           </article> \r\n         </Link>\r\n       ))\r\n      }\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ListaPost","import React from 'react'\r\nimport ListaCategorias from '../components/ListaCategorias'\r\nimport ListaPost from '../components/ListaPost'\r\nconst Home = () => {\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"container\">\r\n        <h2 className=\"titulo-pagina\">Bem-vindo ao IMDB!</h2>\r\n      </div>\r\n      <ListaCategorias />\r\n      <ListaPost url={'/movie/all'} />\r\n    </main>\r\n    \r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\n\r\nimport '../assets/css/componentes/cartao.css'\r\n\r\nconst Sobre = () => {\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"container\">\r\n        <h2 className=\"titulo-pagina\">Sobre o IMDB</h2>\r\n      </div>\r\n      <section className=\"container flex flex--centro\">\r\n        <article className=\"cartao\">\r\n        Em 1989, o britânico Col Needham e outras pessoas participavam no newsgroup rec.arts.movies da Usenet, discutindo filmes e trocando informação. Produzindo listas sobre atores, atrizes e diretores de filmes. Em 1990, já tinham reunido informações sobre mais de 10 000 filmes e séries de televisão. A 17 de Outubro de 1990, Needham publicou uma coleção de scripts de shell de UNIX que podiam ser usados para correr pesquisas nas quatro listas com informação, criando assim a IMDb. Naquele tempo porém, era conhecida como a rec.arts.movies movie database.\r\n        <br></br>\r\n        Por 1993, a base de dados tinha-se estendido para incluir factos sobre biografias e sumários sobre filmes e séries e um interface de e-mail, centralizado para fazer pesquisas na base de dados, tinha sido criado. Mais tarde nesse mesmo ano, moveu-se para a World Wide Web (ainda em crescimento). A base de dados era alojada nos servidores do departamento de informática da Universidade de Cardiff, em Cardiff, Gales, Reino Unido. Rob Hartill era o autor original do interface web. Em 1994, o interface de e-mail foi melhorado para aceitar pedidos de informação, significando que os utilizadores não tinham de enviar a sua informação especificamente para quem tratava de uma lista. Ao longo dos anos, a base de dados era corrida numa rede de mirrors à volta do mundo com largura de banda doada.\r\n        <br></br>\r\n        Em 1995, tinha ficado óbvio a Col Needham que a comunidade de voluntários do projecto se tinha tornado demasiado grande para continuar a manter a base de dados com doações e tempo disponível. A decisão tomada foi a de se tornar o empreendimento comercial e em 1996, a IMDb foi incorporada no Reino Unido, tornando-se a Internet Movie Database Ltd.. Os accionistas eram as pessoas que faziam a manutenção da base de dados e as receitas eram geradas através de publicidade e licenças.\r\n        <br></br>\r\n        Em 2021, o site implementou medidas de segurança nas avaliações da audiência em virtudes de ataques, em massa, de grupos (chamados de milícias digitais) organizados com a única intenção de gerar avaliações negativas em produções cinematográficas. Situações deste tipo ocorreram em filmes como Marighella (2021-Brasil), Captain Marvel (EUA-2019) ou Black Panther (EUA-2018).\r\n        </article>\r\n        \r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Sobre\r\n","export default __webpack_public_path__ + \"static/media/doguito404.1a2ea648.svg\";","import React from 'react'\r\nimport imagem from '../assets/img/doguito404.svg'\r\nimport '../assets/css/404.css'\r\n\r\nconst Pagina404 = () => { \r\n  return (\r\n    <main className=\"container flex flex--centro flex--coluna\" >\r\n      <img className=\"doguito-imagem\" src={imagem} alt=\"ilustração doguito\"/>\r\n      <p className=\"naoencontrado-texto\">\r\n        Ops, Essa página não existe!\r\n      </p>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Pagina404","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../assets/css/componentes/cabecalho.css'\r\n\r\nconst Cabecalho = () => { \r\n  return(\r\n    <header className=\"cabecalho container\">\r\n      <div className=\"menu-hamburger\">\r\n        <span className=\"menu-hamburger__icone\">\r\n        </span>\r\n      </div>\r\n      <div className=\"cabecalho-container\">\r\n        <Link to=\"/\" className=\"flex flex--centro\">\r\n          <h1 className=\"cabecalho__titulo\">IMDB</h1>\r\n        </Link>\r\n      </div>\r\n\r\n      <nav className=\"menu-cabecalho\">\r\n        <ul className=\"menu-itens\">\r\n          <li><Link to=\"/\" className=\"menu-item menu-item--entrar\">Home</Link></li>\r\n          <li><Link to=\"/lista\" className=\"menu-item\">Filmes</Link></li>\r\n          <li><Link to=\"/sobre\" className=\"menu-item\">Sobre</Link></li>\r\n        </ul>\r\n\r\n      </nav>\r\n      <div className=\"menu-cabecalho-background\"></div>\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\nexport default Cabecalho","import React, {useState, useEffect } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { busca } from '../api/api'\r\nimport '../assets/css/post.css'\r\nimport axios from 'axios'\r\n\r\nconst Post = () => { \r\n  let history = useHistory()\r\n  const { id } = useParams()\r\n  const[post, setPost] = useState({})\r\n  const [data, setData] = useState([]); \r\n\r\n  useEffect(() => {\r\n    busca(`/movie/${id}`, setPost)\r\n  }, [id])\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"https://imdb-bonaparte.herokuapp.com/movie/all\"\r\n      )\r\n      setData(res?.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [])\r\n\r\n  return(\r\n    <span>\r\n          \r\n          <h2 className=\"titulo-pagina\">Rating - {id}</h2>\r\n          <section className=\"container flex flex--centro\">\r\n          { \r\n           data\r\n           .filter((post) => (post.title === id))\r\n           .map((post) => (                 \r\n               <article key={post.id} className=\"cartao\">\r\n                  <h1 className=\"cartao-post__titulo\">\r\n                    {post.title} <br></br> <br></br> <h2>Rating: {post.rating}</h2>\r\n                  </h1>\r\n                  <p className=\"cartao-post__meta\">{post.description}</p>\r\n               </article> \r\n           ))\r\n          }\r\n        </section>\r\n        </span>\r\n  )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport ListaPost from '../components/ListaPost'\r\n\r\nconst SubCategoria = () => { \r\n  const { subcategoria } = useParams()\r\n  return(\r\n    <ListaPost url={`/category/?category=${subcategoria}`} />\r\n  )\r\n}\r\n\r\nexport default SubCategoria","import React, { useState, useEffect } from 'react'\r\nimport ListaCategorias from '../components/ListaCategorias'\r\nimport ListaPost from '../components/ListaPost'\r\nimport '../assets/css/blog.css'\r\nimport { Route, useParams, useRouteMatch, Link, Switch } from 'react-router-dom'\r\nimport { busca } from '../api/api'\r\nimport SubCategoria from './SubCategoria'\r\nimport axios from 'axios'\r\n\r\nconst Categoria = () => {\r\n  const { id } = useParams()\r\n  const { url, path } = useRouteMatch()\r\n  const [subcategorias, setSubCategorias] = useState([])\r\n\r\n  const [data, setData] = useState([]); \r\n\r\n  useEffect(() => {\r\n    busca(`movie/category/${id}`, (categoria) => {\r\n      setSubCategorias(categoria.subcategorias)\r\n    })\r\n  }, [id])\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"https://imdb-bonaparte.herokuapp.com/movie/all\"\r\n      )\r\n      setData(res?.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h2 className=\"titulo-pagina\">Procura por categoria</h2>\r\n      </div>\r\n      <ListaCategorias />\r\n      <ul className=\"lista-categorias container flex\">\r\n        {\r\n          subcategorias.map((subcategoria) => (\r\n            <li\r\n              className={`lista-categorias__categoria lista-categorias__categoria--${id}`}\r\n              key={subcategoria}\r\n            >\r\n              <Link to={`${url}/${subcategoria}`}>\r\n                {subcategoria}\r\n              </Link>\r\n            </li>\r\n          ))\r\n        }\r\n\r\n        <span>\r\n          \r\n          <h2 className=\"titulo-pagina\">filmes de {id}</h2>\r\n          <section className=\"container flex flex--centro\">\r\n          { \r\n           data\r\n           .filter((post) => (post.category === id))\r\n           .map((post) => (                 \r\n               <article key={post.id} className=\"cartao\">\r\n                  <h1 className=\"cartao-post__titulo\">\r\n                    {post.title} <br></br> <br></br> <h2>Rating: {post.rating}</h2>\r\n                  </h1>\r\n                  <p className=\"cartao-post__meta\">{post.description}</p>\r\n               </article> \r\n           ))\r\n          }\r\n        </section>\r\n        </span>\r\n\r\n      </ul>\r\n      <Switch>\r\n        <Route exact path={`${path}/`}>\r\n          <ListaPost url={`/category/?category=${id}`} />\r\n        </Route>\r\n        <Route path={`${path}/category/:category`}>\r\n          <SubCategoria />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\nexport default Categoria\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport '../assets/css/componentes/cartao.css'\r\n\r\nconst ListaFilmes = () => { \r\n\r\n  const [data, setData] = useState([]); \r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"https://imdb-bonaparte.herokuapp.com/movie/all\"\r\n      );\r\n      setData(res?.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [])\r\n    \r\n      return(\r\n        <span>\r\n          <div className=\"container\">\r\n          <h2 className=\"titulo-pagina\">Lista de filmes disponíveis</h2>\r\n          </div>\r\n        <section className=\"container flex flex--centro\">\r\n          { \r\n           data.map((post)=> (                 \r\n               <article key={post.id} className=\"cartao\">\r\n                  <h1 className=\"cartao-post__titulo\">\r\n                    {post.title} <br></br> <br></br> <h2>Rating: {post.rating}</h2>\r\n                  </h1>\r\n                  <p className=\"cartao-post__meta\">{post.description}</p>\r\n               </article> \r\n           ))\r\n          }\r\n        </section></span>\r\n      )\r\n    }\r\n\r\nexport default ListaFilmes","import React from 'react'\r\nimport './assets/css/base/base.css'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Home from './paginas/Home'\r\nimport Sobre from './paginas/Sobre'\r\nimport Pagina404 from './paginas/Pagina404'\r\nimport Cabecalho from './components/Cabecalho'\r\nimport Post from './paginas/Post'\r\nimport Categoria from './paginas/Categoria'\r\nimport ListaFilmes from './paginas/listaFilmes'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <Cabecalho />\r\n      <Switch>\r\n        <Route exact path='/'>\r\n          <Home />\r\n        </Route>\r\n        <Route path='/sobre'>\r\n          <Sobre />\r\n        </Route>\r\n        <Route path='/lista'>\r\n          <ListaFilmes />\r\n        </Route>\r\n        <Route path='/movie/category/:id'>\r\n          <Categoria />\r\n        </Route>\r\n        <Route path='/movie/:id'>\r\n          <Post />\r\n        </Route>\r\n        <Route>\r\n          <Pagina404 />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\nreportWebVitals()\r\n"],"sourceRoot":""}